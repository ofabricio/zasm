;
; Data definitions.
;
90               ;; ('Program', [('DD', 'db', [('Expr', ('Num', '90'))])])
01 02            ;; ('Program', [('DD', 'db', [('Expr', ('Num', '01')), ('Expr', ('Num', '02'))])])
db 01 02         ;; ('Program', [('DD', 'db', [('Expr', ('Num', '01')), ('Expr', ('Num', '02'))])])
dw 01 02         ;; ('Program', [('DD', 'dw', [('Expr', ('Num', '01')), ('Expr', ('Num', '02'))])])
01 + 02 03 + 04  ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02'))), ('Expr', ('BinOp', ('Num', '03'), ('AddOp', '+'), ('Num', '04')))])])
;
; Expressions.
;
01                    ;; ('Program', [('DD', 'db', [('Expr', ('Num', '01'))])])
01 + 02               ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02')))])])
01 + 02 * 03          ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03'))))])])
(01 + 02) * 03        ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02')), ('MulOp', '*'), ('Num', '03')))])])
(01) + 02 * 03        ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03'))))])])
01 + (02) * 03        ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03'))))])])
01 + 02 * (03)        ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03'))))])])
01 + (02 * 03)        ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03'))))])])
01 + 02 * 03 - 04     ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03')), ('SubOp', '-'), ('Num', '04'))))])])
01 + 02 * (03 - 04)   ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '02'), ('MulOp', '*'), ('BinOp', ('Num', '03'), ('SubOp', '-'), ('Num', '04')))))])])
(01 + 02) * 03 - 04   ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('BinOp', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02')), ('MulOp', '*'), ('Num', '03')), ('SubOp', '-'), ('Num', '04')))])])
(01 + 02) * (03 - 04) ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02')), ('MulOp', '*'), ('BinOp', ('Num', '03'), ('SubOp', '-'), ('Num', '04'))))])])
(01 + 02 * 03 - 04)   ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('BinOp', ('Num', '02'), ('MulOp', '*'), ('Num', '03')), ('SubOp', '-'), ('Num', '04'))))])])
-(01 + 02)            ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('BinOp', ('Num', '01'), ('AddOp', '+'), ('Num', '02'))))])])
-(01 + -02)           ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('BinOp', ('Num', '01'), ('AddOp', '+'), ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '02')))))])])
-(-01 + -02)          ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('BinOp', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '01')), ('AddOp', '+'), ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '02')))))])])
-01 + -02             ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '01')), ('AddOp', '+'), ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '02'))))])])
--01                  ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('Num', '00'), ('SubOp', '-'), ('BinOp', ('Num', '00'), ('SubOp', '-'), ('Num', '01'))))])])
+01 + +02             ;; ('Program', [('DD', 'db', [('Expr', ('BinOp', ('BinOp', ('Num', '00'), ('AddOp', '+'), ('Num', '01')), ('AddOp', '+'), ('BinOp', ('Num', '00'), ('AddOp', '+'), ('Num', '02'))))])])
mov eax ebx       ;; ('Program', [('Inst', 'mov', ('Reg', 'eax'), ('Reg', 'ebx'))])
mov eax ebx
add eax ebx       ;; ('Program', [('Inst', 'mov', ('Reg', 'eax'), ('Reg', 'ebx')), ('Inst', 'add', ('Reg', 'eax'), ('Reg', 'ebx'))])
